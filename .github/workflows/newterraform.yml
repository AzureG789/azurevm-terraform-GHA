name: 'Terraform Deployment'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


# Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
defaults:
  run:
    shell: bash

env: 
  ROOT_PATH: '${{ github.workspace }}/src'


jobs:
  terraform_Plan:
    name: 'terraform Plan'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Terraform init -upgrade
        run: terraform init
        working-directory: ${{ env.ROOT_PATH }}
  
      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ env.ROOT_PATH }}

      # - name: Terraform Apply
        # if: github.event_name == 'push'
        # run: terraform apply -auto-approve
        # working-directory: ${{ env.ROOT_PATH }}
        
      # - name: Terraform destroy
        # run: terraform destroy -auto-approve
        # working-directory: ${{ env.ROOT_PATH }}

  terraform_Apply:
      name: 'terraform Apply'
      needs: [terraform_Plan]
      runs-on: ubuntu-latest      
      environment: dev

      # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
      defaults:
        run:
          shell: bash
      
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.1.7

        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
          
        - name: Terraform init -upgrade
          run: terraform init
          working-directory: ${{ env.ROOT_PATH }}
    
        - name: Terraform Plan
          run: terraform plan
          working-directory: ${{ env.ROOT_PATH }}

        - name: Terraform Apply
          if: github.event_name == 'push'
          run: terraform apply -auto-approve
          working-directory: ${{ env.ROOT_PATH }}
          
        - name: Terraform destroy
          run: terraform destroy -auto-approve
          working-directory: ${{ env.ROOT_PATH }}

        # - name: Terraform Destroy 
          # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          # run: terraform destroy -auto-approve  
